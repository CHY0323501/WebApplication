@model _06ViewModel.Models.員工

@{
    ViewBag.Title = "Create";
    //var aa = (IEnumerable<_06ViewModel.Models.職稱列表>)ViewBag.職稱;
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>員工</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.姓名, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.姓名, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.姓名, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.名, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.名, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.名, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.稱呼, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.稱呼, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.稱呼, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.出生日期, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.出生日期, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.出生日期, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.地址, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.地址, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.地址, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.城市, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.城市, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.城市, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.行政區, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.行政區, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.行政區, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.職稱, "職稱", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">



                @*//不使用helper產生的下拉式選單寫法如下，需先將viewbag.職稱轉型，(IEnumerable<_06ViewModel.Models.職稱列表>)ViewBag.職稱
                    <select id="Select1" name="職稱">
                        @foreach (var i in aa)
                        {
                            <option value="@i.職稱代碼">@i.職稱1</option>
                        }
                    </select>*@

                @Html.DropDownList("職稱", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.職稱, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
